<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: HTML5 | Robert Mosolgo]]></title>
  <link href="http://rmosolgo.github.io/blog/categories/html5/atom.xml" rel="self"/>
  <link href="http://rmosolgo.github.io/"/>
  <updated>2014-08-11T08:13:26-07:00</updated>
  <id>http://rmosolgo.github.io/</id>
  <author>
    <name><![CDATA[Robert Mosolgo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Client-Side Image Preview with Batman.js]]></title>
    <link href="http://rmosolgo.github.io/blog/2014/06/05/client-side-image-preview-with-batman-dot-js/"/>
    <updated>2014-06-05T07:26:00-07:00</updated>
    <id>http://rmosolgo.github.io/blog/2014/06/05/client-side-image-preview-with-batman-dot-js</id>
    <content type="html"><![CDATA[<p>Implementing image preview is breeze thanks to <a href="http://batmanjs.org">batman.js</a> observers and JavaScript APIs.</p>

<!-- more -->


<p><strong>The goal</strong> is to have a user add an image to a file input and <em>immediately</em> preview that image. To accomplish this, we&rsquo;ll turn the uploaded file into a data URI, then set that to the <code>src</code> of our <code>&lt;img/&gt;</code>.</p>

<p>First, set up the observer in the model:</p>

<p>```coffeescript
class App.ModelWithImage extends Batman.Model
  @encode &lsquo;imageDataURI&rsquo;</p>

<p>  constructor: &ndash;></p>

<pre><code>super
@observe 'imageFile', (newVal, oldVal) -&gt;
  if newVal?
    @_setImageDataURIFromFile()
  else
    @set 'imageDataURI', ""
</code></pre>

<p>```</p>

<p>This says: &ldquo;whenever <code>imageFile</code> changes, if there is a new value, use it to set the data URI, otherwise, set the data URI to <code>""</code>.&rdquo;</p>

<p>Now, implement <code>_setImageDataURIFromFile</code>:</p>

<p>```coffeescript
  _setImageDataURIFromFile: &ndash;></p>

<pre><code>file = @get('imageFile')
reader = new FileReader
reader.onload = (e) =&gt;
  dataURI = e.target.result
  @set 'imageDataURI', dataURI
reader.readAsDataURL(file)
</code></pre>

<p>```</p>

<p>You can use it in a template like this:</p>

<p><code>html
  &lt;img data-bind-src='component.imageDataURI' /&gt;
  &lt;input type='file' data-bind='component.imageFile' /&gt;
</code></p>

<p>When a user uploads a file, the <code>&lt;img&gt;</code> will be automatically updated!</p>
]]></content>
  </entry>
  
</feed>

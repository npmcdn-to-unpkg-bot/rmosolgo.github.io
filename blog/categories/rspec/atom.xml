<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rspec | Robert Mosolgo]]></title>
  <link href="http://rmosolgo.github.io/blog/categories/rspec/atom.xml" rel="self"/>
  <link href="http://rmosolgo.github.io/"/>
  <updated>2015-03-01T17:29:29-08:00</updated>
  <id>http://rmosolgo.github.io/</id>
  <author>
    <name><![CDATA[Robert Mosolgo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rspec should_receive stubs methods]]></title>
    <link href="http://rmosolgo.github.io/blog/2013/09/28/rspec-should-receive-stubs-methods/"/>
    <updated>2013-09-28T20:59:00-07:00</updated>
    <id>http://rmosolgo.github.io/blog/2013/09/28/rspec-should-receive-stubs-methods</id>
    <content type="html"><![CDATA[<p>I learned this the hard way, so I thought I&rsquo;d share.</p>

<!-- more -->


<p>A great feature of Rspec is its <code>should_receive</code> method, which checks if a message was sent to an object
sometime during that spec. For example, this test would pass:</p>

<p>```ruby
  class Fish</p>

<pre><code>def initialize
  @swishes = 0
end

attr_reader :swishes

def swim!
  swish_tail!
end

private
  def swish_tail!
    @swishes += 1
  end
</code></pre>

<p>  end
<code>
</code>ruby
  describe Fish do</p>

<pre><code>it "swims by swishing its tail" do
  swimming_fish = Fish.new
  swimming_fish.should_receive :swish_tail!
  swimming_fish.swim!
end
</code></pre>

<p>  end
```</p>

<p>However, <code>should_receive</code> also stubs the method, so if it is sent, its body isn&rsquo;t executed. This spec
won&rsquo;t pass:</p>

<p>```ruby
  describe Fish do</p>

<pre><code>it "swims by swishing its tail" do
  swimming_fish = Fish.new
  swimming_fish.should_receive :swish_tail!
  swimming_fish.swim!
  swimming_fish.swishes.should == 1 # OOPS, FAILS! it's still 0.
end
</code></pre>

<p>  end
```</p>
]]></content>
  </entry>
  
</feed>
